### Задание по интервью: Сбор данных
#### Цель
Разработать сервис, который по запросу извлекает данные из WHOIS-сервиса на сайте ps.kz.

### Основная задача
#### Спецификация конечной точки (Endpoint):
- Разработать HTTP-сервис с конечной точкой:
  - `GET /lookup_whois`
  
#### Параметры запроса:
- `domain_name`: Строка, представляющая доменное имя, которое нужно запросить через WHOIS.

#### Формат ответа:
- Ответ должен быть в формате JSON.
- Вы ответственны за определение структуры объекта ответа.
- Учитывайте типичные ответы от WHOIS-сервиса.
- Обрабатывайте любые несоответствия или вариации.

### Обязательные требования
#### Надежность и обработка ошибок:
- Приложение должно надежно обрабатывать различные типы ошибок.

#### Качество кода:
- Пишите чистый, хорошо документированный код, который легко понять и поддерживать.
- Следуйте лучшим практикам кодирования, включая модульность, читаемость и повторное использование.

### Дополнительные улучшения (необязательно)
#### Контейнеризация:
- Законтейнеризуйте приложение с использованием Docker.

#### Сохранение данных:
- Реализуйте сохранение данных в базе данных (SQL или NoSQL).

#### Кэширование:
- Изучите и реализуйте механизм кэширования.
- Рассмотрите стратегии обновления кэша.

#### Ограничение скорости запросов:
- Рассмотрите возможность ограничения скорости запросов.

#### Масштабируемость:
- Подумайте, как ваше решение может масштабироваться для обработки большого количества запросов.

### Критерии оценки
- **Полнота**: Насколько хорошо решение соответствует требованиям?
- **Качество кода**: Чист ли код, легко ли его поддерживать и хорошо ли он документирован?
- **Надежность**: Насколько хорошо приложение обрабатывает пограничные случаи и ошибки?
- **Эффективность**: Эффективно ли реализованы требования?
- **Креативность**: Превосходят ли вы требования в каком-либо значимом аспекте?
